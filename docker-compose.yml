services:
  # Database
  db:
    image: postgres:18
    container_name: andy_grails_db
    environment:
      POSTGRES_DB: ${DB_NAME:-andy_grails}
      POSTGRES_USER: ${DB_USER:-andy}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-andy}
    ports:
      - '55432:5432'
    volumes:
      - andy_grails_postgres:/var/lib/postgresql
    networks:
      - andy-network

  # Backend API
  backend:
    image: andygrails/andy-grails-backend:${BACKEND_REVISION:-latest}
    platform: linux/amd64
    container_name: andy_grails_backend
    depends_on:
      db:
        condition: service_started
    ports:
      - '8080:8080'
    environment:
      SPRING_PROFILES_ACTIVE: dev
      DB_HOST: db
      DB_PORT: 5432
      DB_NAME: ${DB_NAME:-andy_grails}
      DB_USER: ${DB_USER:-andy}
      DB_PASSWORD: ${DB_PASSWORD:-andy}
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8080/actuator/health']
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 30s
    networks:
      - andy-network

  # Frontend Angular App
  frontend:
    image: andygrails/andy-grails-frontend:${FRONTEND_REVISION:-latest}
    platform: linux/amd64
    container_name: andy_grails_frontend
    ports:
      - '4200:80'
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=production
    networks:
      - andy-network

volumes:
  andy_grails_postgres:

networks:
  andy-network:
    driver: bridge
